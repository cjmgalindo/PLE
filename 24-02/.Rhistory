#Lectura de los registros del archivo
#install.packages("tidyverse")
library(tidyverse)
# Leer el archivo CSV con delimitador ","
datos <- read_delim("C:/Users/John/Downloads/mundiales_procesados.csv",delim=",")
View(datos)
library(DescTools)
library(DescTools)
Mode(datos$participaciones)
summarise(datos, Moda = Mode(participaciones))
#Función de Crosstab
library(descr)
crosstab(datos$continente,datos$campeon,
prop.c = TRUE,   #dist.
prop.r = TRUE,
prop.t = TRUE,
percent = TRUE)
count(datos, continente, campeon, sort = TRUE)
tabla_cont_campeon <- tabyl(datos, continente, campeon)
tabla_cont_campeon
filter(tabla_cont_campeon, campeón == max(campeón))
# Leer el archivo CSV con delimitador ","
datos <- read_delim("C:/Users/John/Downloads/mundiales_procesados.csv",delim=",")
View(datos)
#Lectura de los registros del archivo
#install.packages("tidyverse")
library(tidyverse)
# Leer el archivo CSV con delimitador ","
datos <- read_delim("C:/Users/John/Downloads/mundiales_procesados.csv",delim=",")
View(datos)
mean(datos$participaciones)
summarise(datos, promedio = mean(participaciones))
median(datos$participaciones)
summarise(datos, mediana = median(participaciones))
library(DescTools)
Mode(datos$participaciones)
summarise(datos, Moda = Mode(participaciones))
# install.packages("janitor")
library(janitor)
frecuencias <- tabyl(datos, continente)
frecuencias
minimo <- filter(frecuencias, n == min(n))
minimo
maximo <- filter(frecuencias, n == max(n))
maximo
cat("El continente con la mayor cantidad de países que han participado de mundiales es",
maximo$continente, "con", maximo$n, "selecciones, mientras que el de menor participación es",
minimo$continente, "con", minimo$n, "selecciones.")
frecuencias <-
frecuencias %>%
adorn_totals()
frecuencias
frecuencias <-
frecuencias %>%
rename(Continente = continente, `Frec. Absoluta` = n, `Frec. Relativa` = percent)
frecuencias
frecuencias <-
datos %>%
tabyl(continente) %>%
adorn_totals() %>%
rename(Continente = continente, `Frec. Absoluta` = n, `Frec. Relativa` = percent)
frecuencias
count(datos, continente, campeon, sort = TRUE)
tabla_cont_campeon <- tabyl(datos, continente, campeon)
tabla_cont_campeon
filter(tabla_cont_campeon, campeón == max(campeón))
datos %>%
tabyl(continente, campeon) %>%
adorn_totals(where = c("row", "col"))
#Función de Crosstab
library(descr)
#Función de Crosstab
library(descr)
crosstab(datos$continente,datos$campeon,
prop.c = TRUE,   #dist.
prop.r = TRUE,
prop.t = TRUE,
percent = TRUE)
table(datos$continente,datos$campeon)
datos %>%
tabyl(continente, campeon) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all") %>%  # cálculo de proporciones
adorn_pct_formatting(digits = 1)            # mostrarlas como porcentaje (opcional)
datos %>%
tabyl(continente, campeon) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all") %>%  # cálculo de proporciones
adorn_pct_formatting(digits = 1)            # mostrarlas como porcentaje (opcional)
datos %>%
tabyl(continente, campeon) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all") %>%  # cálculo de proporciones
#adorn_pct_formatting(digits = 1)            # mostrarlas como porcentaje (opcional)
#Distribución condicional de “campeon” dado “continente”:
datos %>%
tabyl(continente, campeon) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "row") %>%
adorn_pct_formatting(digits = 1)
datos %>%
tabyl(continente, campeon) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all") #%>%  # cálculo de proporciones
################################
datos <- mutate(datos, intervalos = cut(goles_favor, breaks = seq(0, 150, 50), right = FALSE))
datos %>%
tabyl(intervalos) %>%
adorn_totals()
datos <- mutate(datos, intervalos1 = cut(goles_favor, breaks = seq(0, 133, 19), right = FALSE))
datos %>%
tabyl(intervalos1) %>%
adorn_totals()
select(datos, seleccion, goles_favor, intervalos)
tabla_gf <- tabyl(datos, intervalos)
tabla_gf
